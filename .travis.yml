dist: xenial

language: node_js

node_js:
  - "8"

env:
  global:
    - IMAGE_NAME=maximumoverdrive/ci-testing

stages:
  - lint
  - test
  - deploy

services:
  - docker

jobs:
  include:
    - stage: lint
      name: EditorConfig Syntax Verification
      install:
        - npm install -g eclint
        - eclint --version
      script: eclint check
    - stage: lint
      name: Shell Script Syntax Verification
      script: make sh/lint
    - stage: test
      name: Run Makefile unit tests
      script:
        - docker build -t "$IMAGE_NAME" -f Dockerfile . && docker run "$IMAGE_NAME" bats/test
    - stage: deploy
      if: branch = master AND type = push AND repo = userhas404d/ci-testing
      before_script:
        - |
          PRIOR_VERSION=$(git describe --abbrev=0 --tags)
          RELEASE_VERSION=$(grep current_version $TRAVIS_BUILD_DIR/.bumpversion.cfg | sed 's/^.*= //' )
          RELEASE_BODY="* [ci-testing v$RELEASE_VERSION CHANGELOG](https://github.com/userhas404d/ci-testing/blob/$RELEASE_VERSION/CHANGELOG.md)"
          export PRIOR_VERSION RELEASE_VERSION RELEASE_BODY
          docker build -t "$IMAGE_NAME" -f Dockerfile .
      script: skip
      before_deploy:
        - |
          (set -x; git tag -a $RELEASE_VERSION -m $RELEASE_VERSION)
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag "$IMAGE_NAME" "$IMAGE_NAME:latest"
          docker tag "$IMAGE_NAME" "$IMAGE_NAME:$RELEASE_VERSION"
          docker push "$IMAGE_NAME:latest" && docker push "$IMAGE_NAME:$RELEASE_VERSION"
      deploy:
        provider: releases
        api_key:
          secure:
        name: $RELEASE_VERSION
        body: $RELEASE_BODY
        tag_name: $RELEASE_VERSION
        target_commitish: $TRAVIS_COMMIT
        draft: false
        on:
          branch: master
          repo: userhas404d/ci-testing
          condition: '"$PRIOR_VERSION" != "$RELEASE_VERSION"'
